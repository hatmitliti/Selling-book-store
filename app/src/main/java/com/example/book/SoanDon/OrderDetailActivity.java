package com.example.book.SoanDon;import android.os.Bundle;import android.view.View;import android.widget.Button;import android.widget.ImageView;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import com.example.book.R;import com.example.book.SoanDon.adapter.OrderAdapter;import com.example.book.SoanDon.models.Book;import com.example.book.SoanDon.models.User;import com.example.book.XuLyHD.DonHangChoXuLy.Bill;import com.example.book.XuLyHD.DonHangChoXuLy.Bill_Product;import com.google.firebase.database.ChildEventListener;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.squareup.picasso.Picasso;import java.text.NumberFormat;import java.util.ArrayList;public class OrderDetailActivity extends AppCompatActivity {    ListView listView;    ImageView imgUserOrderDetail;    TextView txtNameOrderDetail;    TextView txtPhoneOrderDetail;    TextView txtAddressOrderDetail;    TextView txtTotalMoneyOrderDetail;    Button btnComfimOrderDetail;    DatabaseReference mDatabase = FirebaseDatabase.getInstance().getReference();    String id_Bill = "";    Bill bill;    OrderAdapter adapter;    ArrayList<Bill_Product> books = new ArrayList<>();    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.packager_order_detail_layout);        setTitle("Chi Tiết Hoá Đơn");        id_Bill = getIntent().getStringExtra("id");        setControl();        getDataProductDetail();        adapter = new OrderAdapter(this, R.layout.packager_order_items, books);        listView.setAdapter(adapter);        btnComfimOrderDetail.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                mDatabase.child("bills").child(bill.getId()).child("status").setValue(2);                onBackPressed();            }        });// toolbarr        Toolbar toolbar = findViewById(R.id.toobar);        setSupportActionBar(toolbar);        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_baseline_arrow_back_24);        toolbar.setNavigationOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                onBackPressed();            }        });    }    private void setImageTextUser() {        FirebaseDatabase.getInstance().getReference("users").addChildEventListener(new ChildEventListener() {            @Override            public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                if (snapshot.getKey().equals(bill.getId_user())) {                    try {                        Picasso.get().load(snapshot.getValue(User.class).getImage()).into(imgUserOrderDetail);                    } catch (Exception e) {                        e.printStackTrace();                        imgUserOrderDetail.setImageResource(R.drawable.user);                    }                }            }            @Override            public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {            }            @Override            public void onChildRemoved(@NonNull DataSnapshot snapshot) {            }            @Override            public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {            }            @Override            public void onCancelled(@NonNull DatabaseError error) {            }        });        txtNameOrderDetail.setText(bill.getName());        txtAddressOrderDetail.setText(bill.getAddress());        txtPhoneOrderDetail.setText(bill.getPhone());        txtTotalMoneyOrderDetail.setText(NumberFormat.getInstance().format(bill.getTotalMoney()) + " VND");    }    private void getDataProductDetail() {        mDatabase.child("bill_detail").child(id_Bill).addChildEventListener(new ChildEventListener() {            @Override            public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                Bill_Product product = snapshot.getValue(Bill_Product.class);                books.add(product);                adapter.notifyDataSetChanged();            }            @Override            public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {            }            @Override            public void onChildRemoved(@NonNull DataSnapshot snapshot) {            }            @Override            public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {            }            @Override            public void onCancelled(@NonNull DatabaseError error) {            }        });        mDatabase.child("bills").addChildEventListener(new ChildEventListener() {            @Override            public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                if (snapshot.getKey().equals(id_Bill)) {                    bill = snapshot.getValue(Bill.class);                    setImageTextUser();                }            }            @Override            public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {            }            @Override            public void onChildRemoved(@NonNull DataSnapshot snapshot) {            }            @Override            public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {            }            @Override            public void onCancelled(@NonNull DatabaseError error) {            }        });    }    private void setControl() {        listView = findViewById(R.id.listOrder);        imgUserOrderDetail = findViewById(R.id.imgUserOrderDetail);        txtNameOrderDetail = findViewById(R.id.txtNameOrderDetail);        txtPhoneOrderDetail = findViewById(R.id.txtPhoneOrderDetail);        txtAddressOrderDetail = findViewById(R.id.txtAddressOrderDetail);        txtTotalMoneyOrderDetail = findViewById(R.id.txtTotalMoneyOrderDetail);        btnComfimOrderDetail = findViewById(R.id.btnComfimOrderDetail);    }}