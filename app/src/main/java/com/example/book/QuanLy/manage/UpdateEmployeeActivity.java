package com.example.book.QuanLy.manage;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.Button;import android.widget.EditText;import android.widget.Spinner;import android.widget.TextView;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import com.example.book.QuanLy.models.Employee;import com.example.book.R;import com.google.firebase.database.ChildEventListener;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;public class UpdateEmployeeActivity extends AppCompatActivity {    String listspinner[] = {"Nhân viên giao hàng", "Nhân viên xử lý đơn", "Nhân viên đóng gói", "Nhân viên thủ kho"};    Employee employee;    TextView txtemail;    EditText txtname;    TextView txtpass;    EditText txtbirth;    EditText txtsdt;    EditText txtluongCB;    String permission;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.manage_update_employee_layout);        setTitle("Cập nhật hồ sơ nhân viên");        Spinner spinner = findViewById(R.id.spinnerAddEmployee);        ArrayAdapter<String> spinnerAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, listspinner);        spinner.setAdapter(spinnerAdapter);        DatabaseReference mData = FirebaseDatabase.getInstance().getReference();        // toolbarr        Toolbar toolbar = findViewById(R.id.toobar);        setSupportActionBar(toolbar);        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_baseline_arrow_back_24);        toolbar.setNavigationOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                onBackPressed();            }        });        txtemail = findViewById(R.id.txtemail);        txtname = findViewById(R.id.txtname);        txtpass = findViewById(R.id.txtpass);        txtbirth = findViewById(R.id.txtbirth);        txtsdt = findViewById(R.id.txtsdt);        txtluongCB = findViewById(R.id.txtluongCB);        Intent intent = getIntent();        if (intent.getStringExtra("permission").equals("shipper")) {            mData.child("shipper").addChildEventListener(new ChildEventListener() {                @Override                public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                    if (snapshot.getKey().equals(intent.getStringExtra("id"))) {                        employee = snapshot.getValue(Employee.class);                        txtemail.setText(employee.getEmail());                        txtname.setText(employee.getName());                        txtbirth.setText(employee.getBirth());                        txtsdt.setText(employee.getSdt());                        txtluongCB.setText(employee.getLuongCB() + "");                        txtpass.setText("******");                        if (employee.getPermission().equals("shipper")) {                            spinner.setSelection(0);                        }                        if (employee.getPermission().equals("soanDon")) {                            spinner.setSelection(2);                        }                        if (employee.getPermission().equals("thuKho")) {                            spinner.setSelection(3);                        }                        if (employee.getPermission().equals("xuLyHD")) {                            spinner.setSelection(1);                        }                    }                }                @Override                public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                }                @Override                public void onChildRemoved(@NonNull DataSnapshot snapshot) {                }                @Override                public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                }                @Override                public void onCancelled(@NonNull DatabaseError error) {                }            });        } else {            mData.child("admin").child(intent.getStringExtra("permission")).addChildEventListener(new ChildEventListener() {                @Override                public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                    if (snapshot.getKey().equals(intent.getStringExtra("id"))) {                        employee = snapshot.getValue(Employee.class);                        txtemail.setText(employee.getEmail());                        txtname.setText(employee.getName());                        txtbirth.setText(employee.getBirth());                        txtsdt.setText(employee.getSdt());                        txtluongCB.setText(employee.getLuongCB() + "");                        txtpass.setText("******");                        if (employee.getPermission().equals("shipper")) {                            spinner.setSelection(0);                        }                        if (employee.getPermission().equals("soanDon")) {                            spinner.setSelection(2);                        }                        if (employee.getPermission().equals("thuKho")) {                            spinner.setSelection(3);                        }                        if (employee.getPermission().equals("xuLyHD")) {                            spinner.setSelection(1);                        }                    }                }                @Override                public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                }                @Override                public void onChildRemoved(@NonNull DataSnapshot snapshot) {                }                @Override                public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                }                @Override                public void onCancelled(@NonNull DatabaseError error) {                }            });        }        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {            @Override            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {                permission = listspinner[position];                if (permission.equals(listspinner[0])) {                    permission = "shipper";                } else if (permission.equals(listspinner[1])) {                    permission = "xuLyHD";                } else if (permission.equals(listspinner[2])) {                    permission = "soanDon";                } else if (permission.equals(listspinner[3])) {                    permission = "thuKho";                }            }            @Override            public void onNothingSelected(AdapterView<?> parent) {            }        });        findViewById(R.id.btnAddEmploeeScreen).setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                if (txtname.getText().toString().isEmpty()) {                    Toast.makeText(getApplicationContext(), "Thiếu", Toast.LENGTH_SHORT).show();                } else if (txtbirth.getText().toString().isEmpty()) {                    Toast.makeText(getApplicationContext(), "Thiếu", Toast.LENGTH_SHORT).show();                } else if (txtsdt.getText().toString().isEmpty()) {                    Toast.makeText(getApplicationContext(), "Thiếu", Toast.LENGTH_SHORT).show();                } else if (txtluongCB.getText().toString().isEmpty()) {                    Toast.makeText(getApplicationContext(), "Thiếu", Toast.LENGTH_SHORT).show();                } else {                    String name = txtname.getText().toString();                    String birth = txtbirth.getText().toString();                    String sdt = txtsdt.getText().toString();                    int luong = Integer.parseInt(txtluongCB.getText().toString());                    employee.setBirth(birth);                    employee.setName(name);                    employee.setSdt(sdt);                    employee.setLuongCB(luong);                    // kiểm tra co set quyền khác cho nó không :                    if (employee.getPermission().equals(permission)) {                        if (employee.getPermission().equals("shipper")) {                            mData.child("shipper").child(employee.getId()).setValue(employee);                        } else {                            mData.child("admin").child(employee.getPermission()).child(employee.getId()).setValue(employee);                        }                    } else {                        if (permission.equals("shipper")) {                            String pe = employee.getPermission();                            employee.setPermission(permission);                            mData.child("shipper").child(employee.getId()).setValue(employee);                            mData.child("admin").child(pe).child(employee.getId()).removeValue();                        } else {                            String pe = employee.getPermission();                            employee.setPermission(permission);                            mData.child("admin").child(permission).child(employee.getId()).setValue(employee);                            mData.child("shipper").child(employee.getId()).removeValue();                        }                    }                    Toast.makeText(getApplicationContext(), "Xong", Toast.LENGTH_SHORT).show();                    onBackPressed();                }            }        });    }}