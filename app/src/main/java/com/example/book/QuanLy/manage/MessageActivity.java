package com.example.book.QuanLy.manage;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.widget.AdapterView;import android.widget.ListView;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import com.example.book.QuanLy.adapter.MessageAdapter;import com.example.book.QuanLy.models.Message;import com.example.book.QuanLy.models.MessageDetail;import com.example.book.R;import com.example.book.SoanDon.models.User;import com.google.firebase.database.ChildEventListener;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.ValueEventListener;import java.util.ArrayList;public class MessageActivity extends AppCompatActivity {    private MessageAdapter adapter;    private ArrayList<Message> messList = new ArrayList<Message>();    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.manage_message_layout);        setTitle("Quản lý tin nhắn");        ListView listView = findViewById(R.id.listmessage);        adapter = new MessageAdapter(this, R.layout.manage_message_items, messList);        listView.setAdapter(adapter);        // toolbarr        Toolbar toolbar = findViewById(R.id.toobar);        setSupportActionBar(toolbar);        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_baseline_arrow_back_24);        toolbar.setNavigationOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                onBackPressed();            }        });        DatabaseReference mDatabase = FirebaseDatabase.getInstance().getReference("messages");        mDatabase.addChildEventListener(new ChildEventListener() {            @Override            public void onChildAdded(@NonNull DataSnapshot snapshot_, @Nullable String previousChildName) {                String keyID = snapshot_.getKey();                FirebaseDatabase.getInstance().getReference("users")                        .addChildEventListener(new ChildEventListener() {                            @Override                            public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                                if (snapshot.getKey().equals(keyID)) {                                    User user = snapshot.getValue(User.class);                                    String name = user.getName();                                    String image = user.getImage();                                    messList.add(new Message(name,"", image, keyID));                                    adapter.notifyDataSetChanged();                                    getContentMess();                                }                            }                            @Override                            public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                            }                            @Override                            public void onChildRemoved(@NonNull DataSnapshot snapshot) {                            }                            @Override                            public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                            }                            @Override                            public void onCancelled(@NonNull DatabaseError error) {                            }                        });            }            @Override            public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {            }            @Override            public void onChildRemoved(@NonNull DataSnapshot snapshot) {            }            @Override            public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {            }            @Override            public void onCancelled(@NonNull DatabaseError error) {            }        });        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {            @Override            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {                Intent intent = new Intent(getApplicationContext(), ChatActivity.class);                intent.putExtra("idUser", messList.get(position).getId());                startActivity(intent);            }        });    }    public void getContentMess() {        FirebaseDatabase.getInstance().getReference("messages")                .addChildEventListener(new ChildEventListener() {                    @Override                    public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                        String id = snapshot.getKey();                        FirebaseDatabase.getInstance().getReference("messages")                                .child(snapshot.getKey()).addChildEventListener(new ChildEventListener() {                            @Override                            public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                                MessageDetail messageDetail = snapshot.getValue(MessageDetail.class);                                for (int i=0;i<messList.size();i++){                                    if (messList.get(i).getId().equals(id)){                                        messList.get(i).setContent(messageDetail.getContent());                                        adapter.notifyDataSetChanged();                                    }                                }                            }                            @Override                            public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                            }                            @Override                            public void onChildRemoved(@NonNull DataSnapshot snapshot) {                            }                            @Override                            public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                            }                            @Override                            public void onCancelled(@NonNull DatabaseError error) {                            }                        });                    }                    @Override                    public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                    }                    @Override                    public void onChildRemoved(@NonNull DataSnapshot snapshot) {                    }                    @Override                    public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                    }                    @Override                    public void onCancelled(@NonNull DatabaseError error) {                    }                });    }}