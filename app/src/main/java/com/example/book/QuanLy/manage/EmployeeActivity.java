package com.example.book.QuanLy.manage;import android.app.AlertDialog;import android.content.DialogInterface;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.Button;import android.widget.ListView;import android.widget.Spinner;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import com.example.book.QuanLy.adapter.AdapterEmployee;import com.example.book.QuanLy.adapter.DeleteEmployee;import com.example.book.QuanLy.models.Employee;import com.example.book.R;import com.google.firebase.database.ChildEventListener;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import java.util.ArrayList;public class EmployeeActivity extends AppCompatActivity {    ArrayList<Employee> list;    AdapterEmployee adapterEmployee;    int dem = 0;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.manage_employee_layout);        setTitle("Quản Lý Nhân Viên");        ListView listView = findViewById(R.id.listEmployee);        Spinner spinerEmployee = findViewById(R.id.spinerEmployee);        // set lọc        String listspinner[] = {"Tất cả", "Nhân viên giao hàng", "Nhân viên xử lý đơn", "Nhân viên đóng gói", "Nhân viên thủ kho"};        ArrayAdapter<String> spinnerAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, listspinner);        spinerEmployee.setAdapter(spinnerAdapter);        // lấy ds        list = new ArrayList<>();        adapterEmployee = new AdapterEmployee(getApplicationContext(), R.layout.manage_employee_items, list, new DeleteEmployee() {            @Override            public void deleteEmploee(Employee employee) {                DialogInterface.OnClickListener dialogClickListener = new DialogInterface.OnClickListener() {                    @Override                    public void onClick(DialogInterface dialog, int which) {                        switch (which) {                            case DialogInterface.BUTTON_POSITIVE:                                // nếu là shipper:                                if (employee.getPermission().equals("shipper")) {                                    FirebaseDatabase.getInstance().getReference("shipper").                                            child(employee.getId()).removeValue();                                } else {                                    // nếu nhân viên khác:                                    DatabaseReference mData = FirebaseDatabase.getInstance().getReference("admin");                                    mData.child(employee.getPermission()).child(employee.getId()).removeValue();                                }                                break;                            case DialogInterface.BUTTON_NEGATIVE:                                //No button clicked                                break;                        }                    }                };                AlertDialog.Builder builder = new AlertDialog.Builder(EmployeeActivity.this);                builder.setMessage("Bạn chắc chắn xóa?").setPositiveButton("Yes", dialogClickListener)                        .setNegativeButton("No", dialogClickListener).show();            }            @Override            public void updateEmploee(Employee employee) {                Intent intent = new Intent(getApplicationContext(), UpdateEmployeeActivity.class);                intent.putExtra("id", employee.getId());                intent.putExtra("permission", employee.getPermission());                startActivity(intent);            }        });        listView.setAdapter(adapterEmployee);        // xử lý khi bấm lọc:        spinerEmployee.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {            @Override            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {                String str = spinerEmployee.getSelectedItem().toString();                if (str.equals("Tất cả")) {                    if (dem == 0) {                        dem = 1;                    } else {                        getData(list, adapterEmployee);                    }                    // tất cả:                }                if (str.equals("Nhân viên giao hàng")) {                    // shipper:                    list.clear();                    adapterEmployee.notifyDataSetChanged();                    FirebaseDatabase.getInstance().getReference("shipper").addChildEventListener(new ChildEventListener() {                        @Override                        public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                            list.add(snapshot.getValue(Employee.class));                            adapterEmployee.notifyDataSetChanged();                        }                        @Override                        public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                        }                        @Override                        public void onChildRemoved(@NonNull DataSnapshot snapshot) {                        }                        @Override                        public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                        }                        @Override                        public void onCancelled(@NonNull DatabaseError error) {                        }                    });                }                if (str.equals("Nhân viên đóng gói")) {                    // xử lý đơn                    list.clear();                    adapterEmployee.notifyDataSetChanged();                    FirebaseDatabase.getInstance().getReference("admin")                            .child("soanDon").addChildEventListener(new ChildEventListener() {                        @Override                        public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                            list.add(snapshot.getValue(Employee.class));                            adapterEmployee.notifyDataSetChanged();                        }                        @Override                        public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                        }                        @Override                        public void onChildRemoved(@NonNull DataSnapshot snapshot) {                        }                        @Override                        public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                        }                        @Override                        public void onCancelled(@NonNull DatabaseError error) {                        }                    });                }                if (str.equals("Nhân viên xử lý đơn")) {                    // đóng gói                    list.clear();                    adapterEmployee.notifyDataSetChanged();                    FirebaseDatabase.getInstance().getReference("admin")                            .child("xuLyHD").addChildEventListener(new ChildEventListener() {                        @Override                        public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                            list.add(snapshot.getValue(Employee.class));                            adapterEmployee.notifyDataSetChanged();                        }                        @Override                        public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                        }                        @Override                        public void onChildRemoved(@NonNull DataSnapshot snapshot) {                        }                        @Override                        public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                        }                        @Override                        public void onCancelled(@NonNull DatabaseError error) {                        }                    });                }                if (str.equals("Nhân viên thủ kho")) {                    // thủ kho                    list.clear();                    adapterEmployee.notifyDataSetChanged();                    FirebaseDatabase.getInstance().getReference("admin")                            .child("thuKho").addChildEventListener(new ChildEventListener() {                        @Override                        public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                            list.add(snapshot.getValue(Employee.class));                            adapterEmployee.notifyDataSetChanged();                        }                        @Override                        public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                        }                        @Override                        public void onChildRemoved(@NonNull DataSnapshot snapshot) {                        }                        @Override                        public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                        }                        @Override                        public void onCancelled(@NonNull DatabaseError error) {                        }                    });                }                adapterEmployee.notifyDataSetChanged();            }            @Override            public void onNothingSelected(AdapterView<?> parent) {            }        });        // xử lý khi bấm thêm nhân viên:        findViewById(R.id.btnAddEmployee).setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                startActivity(new Intent(getApplicationContext(), RecordEmployeeActivity.class));            }        });        // toolbarr        Toolbar toolbar = findViewById(R.id.toobar);        setSupportActionBar(toolbar);        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_baseline_arrow_back_24);        toolbar.setNavigationOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                onBackPressed();            }        });    }    @Override    protected void onResume() {        super.onResume();        //list.clear();        getData(list, adapterEmployee);    }    public void getData(ArrayList<Employee> list, AdapterEmployee adapterEmployee) {        DatabaseReference mData = FirebaseDatabase.getInstance().getReference("admin");        list.clear();        adapterEmployee.notifyDataSetChanged();        // lấy danh sách các soạn đơn        mData.child("soanDon").addChildEventListener(new ChildEventListener() {            @Override            public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                list.add(snapshot.getValue(Employee.class));                adapterEmployee.notifyDataSetChanged();            }            @Override            public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                for (int i = 0; i < list.size(); i++) {                    if (list.get(i).getId().equals(snapshot.getKey())) {                        Employee employee = snapshot.getValue(Employee.class);                        list.set(i, employee);                        adapterEmployee.notifyDataSetChanged();                    }                }            }            @Override            public void onChildRemoved(@NonNull DataSnapshot snapshot) {                for (int i = 0; i < list.size(); i++) {                    if (list.get(i).getId().equals(snapshot.getKey())) {                        list.remove(i);                        adapterEmployee.notifyDataSetChanged();                    }                }            }            @Override            public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {            }            @Override            public void onCancelled(@NonNull DatabaseError error) {            }        });        // lấy danh sách các thủ kho:        mData.child("thuKho").addChildEventListener(new ChildEventListener() {            @Override            public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                list.add(snapshot.getValue(Employee.class));                adapterEmployee.notifyDataSetChanged();            }            @Override            public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                for (int i = 0; i < list.size(); i++) {                    if (list.get(i).getId().equals(snapshot.getKey())) {                        Employee employee = snapshot.getValue(Employee.class);                        list.set(i, employee);                        adapterEmployee.notifyDataSetChanged();                    }                }            }            @Override            public void onChildRemoved(@NonNull DataSnapshot snapshot) {                for (int i = 0; i < list.size(); i++) {                    if (list.get(i).getId().equals(snapshot.getKey())) {                        list.remove(i);                        adapterEmployee.notifyDataSetChanged();                    }                }            }            @Override            public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {            }            @Override            public void onCancelled(@NonNull DatabaseError error) {            }        });        // lấy danh sách các xử lý hóa đơn:        mData.child("xuLyHD").addChildEventListener(new ChildEventListener() {            @Override            public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                list.add(snapshot.getValue(Employee.class));                adapterEmployee.notifyDataSetChanged();            }            @Override            public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                for (int i = 0; i < list.size(); i++) {                    if (list.get(i).getId().equals(snapshot.getKey())) {                        Employee employee = snapshot.getValue(Employee.class);                        list.set(i, employee);                        adapterEmployee.notifyDataSetChanged();                    }                }            }            @Override            public void onChildRemoved(@NonNull DataSnapshot snapshot) {                for (int i = 0; i < list.size(); i++) {                    if (list.get(i).getId().equals(snapshot.getKey())) {                        list.remove(i);                        adapterEmployee.notifyDataSetChanged();                    }                }            }            @Override            public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {            }            @Override            public void onCancelled(@NonNull DatabaseError error) {            }        });        // lấy danh sách các shipper:        DatabaseReference mDataShipper = FirebaseDatabase.getInstance().getReference("shipper");        mDataShipper.addChildEventListener(new ChildEventListener() {            @Override            public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                list.add(snapshot.getValue(Employee.class));                adapterEmployee.notifyDataSetChanged();            }            @Override            public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                for (int i = 0; i < list.size(); i++) {                    if (list.get(i).getId().equals(snapshot.getKey())) {                        Employee employee = snapshot.getValue(Employee.class);                        list.set(i, employee);                        adapterEmployee.notifyDataSetChanged();                    }                }            }            @Override            public void onChildRemoved(@NonNull DataSnapshot snapshot) {                for (int i = 0; i < list.size(); i++) {                    if (list.get(i).getId().equals(snapshot.getKey())) {                        list.remove(i);                        adapterEmployee.notifyDataSetChanged();                    }                }            }            @Override            public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {            }            @Override            public void onCancelled(@NonNull DatabaseError error) {            }        });    }}